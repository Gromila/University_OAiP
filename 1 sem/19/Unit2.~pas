unit Unit2;

interface

uses Grids, SysUtils, Dialogs, Math;

type
  TKey = integer;
  TInf = record
    FIO: string;
    key: TKey;
  end;
  PSel = ^Sel;
  Sel = record
    inf: TInf;
    a: PSel;
  end;
  MS = array[0..1] of PSel;
  Pms = ^MS;
  TH = class (TObject)
    m,n:Word;
    sp,sp1:PSel;
    h:pms;
    constructor create(m0:Word);
    destructor free(var stringgrid:TStringGrid);
    procedure Add(Int:TInf);
    procedure read(key:Tkey;  var inf: TInf);
  end;

implementation

Constructor TH.create(M0: word);
var i: Word;
begin
  Inherited create;
  m:=m0; n:=0;
  GetMem(H,M*4);
  for i:=0 to M-1 do H[i]:=nil;
end;

Destructor TH.Free;
var i,j:Word;
begin
  j:=0;
  for i:=0 to M-1 do
    while H[i]<>Nil do
      begin
        Inc(j);
        sp:=H[i];
        StringGrid.Cells[0,j]:=sp^.inf.FIO;
        StringGrid.Cells[1,j]:=IntToStr(sp^.inf.key);
        H[i]:=sp^.a;
        Dispose(sp);
      end;
  FreeMem(H,4*M);
end;

procedure TH.Add;
var
  i: integer;
  p: PSel;
begin
  i:=inf.key mod M;
  New(p);
  Inc(n);
  p^.inf:=inf;
  p^.a:=H[i];
  H[i]:=p;
end;

procedure TH.read;
var
  i:integer;
begin
  i:=key mod M;
  sp:=H[i];
  while (sp<>nil) and (sp^.inf.key<>key) do sp:=sp^.A;
  if sp<>nil then inf:=sp^.inf
             else ShowMessage('ключ не найден');
end;

end.
